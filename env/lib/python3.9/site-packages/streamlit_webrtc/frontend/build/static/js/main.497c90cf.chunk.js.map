{"version":3,"sources":["ThemeProvider.tsx","translation/TranslationProvider.tsx","DeviceSelect/components/DeviceSelectContainer.tsx","DeviceSelect/components/VideoPreviewContainer.tsx","DeviceSelect/components/messages/Message.tsx","DeviceSelect/components/messages/MediaApiNotAvailableMessage.tsx","DeviceSelect/components/messages/AskPermissionMessage.tsx","DeviceSelect/components/messages/AccessDeniedMessage.tsx","DeviceSelect/components/messages/DeviceNotAvailableMessage.tsx","DeviceSelect/components/VoidVideoPreview.tsx","DeviceSelect/components/Defer.tsx","DeviceSelect/components/VideoPreview.tsx","DeviceSelect/utils.ts","DeviceSelect/VideoPreview.tsx","DeviceSelect/DeviceSelect.tsx","DeviceSelect/DeviceSelectForm.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","media-constraint.ts","webrtc/reducer.ts","webrtc/index.ts","component-value.ts","translation/components/TranslatedButton.tsx","WebRtcStreamer.tsx","index.tsx"],"names":["ThemeProvider","props","stTheme","useRenderData","theme","stThemeJson","JSON","stringify","muiTheme","React","useMemo","parse","textColorScale","chroma","scale","textColor","backgroundColor","mode","createTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","translationContext","createContext","undefined","useTranslation","key","contextValue","useContext","TranslationProvider","args","start","stop","select_device","device_ask_permission","device_not_available","device_access_denied","media_api_not_available","value","Provider","memo","DeviceSelectContainer","useTheme","isSmallViewport","useMediaQuery","breakpoints","down","useEffect","Streamlit","setFrameHeight","Stack","direction","spacing","VideoPreviewContainer","styled","Box","position","width","Message","Paper","display","justifyContent","alignItems","height","padding","boxSizing","MediaApiNotAvailableMessage","AskPermissionMessage","AccessDeniedMessage","error","message","DeviceNotAvailableMessage","StyledPaper","VoidVideoPreview","fontSize","OverlayBox","margin","content","opacity","$transparent","transition","Defer","useState","elapsed","setElapsed","timer","setTimeout","time","clearTimeout","VideoPreview","maxWidth","maxHeight","stopAllTracks","stream","getVideoTracks","forEach","track","getAudioTracks","videoRef","useRef","deviceId","unmounted","navigator","mediaDevices","getUserMedia","video","audio","then","_stream","current","srcObject","ref","autoPlay","muted","ensureValidSelection","devices","selectedDeviceId","deviceIds","map","d","includes","length","deviceSelectionReducer","state","action","type","unavailable","videoInputs","audioInputs","audioOutputs","selectedVideoInputDeviceId","selectedAudioInputDeviceId","filter","kind","payload","DeviceSelect","useVideo","useAudio","defaultVideoDeviceId","defaultAudioDeviceId","onSelect","permissionState","setPermissionState","useReducer","deviceSelectionDispatch","updateDeviceList","useCallback","enumerateDevices","defaultDeviceIdsRef","videoDeviceId","audioDeviceId","a","catch","err","handleDeviceChange","ondevicechange","handleVideoInputChange","e","target","handleAudioInputChange","videoInput","find","audioInput","Error","DOMException","name","Alert","severity","FormControl","fullWidth","InputLabel","htmlFor","NativeSelect","inputProps","id","onChange","device","label","DeviceSelectForm","onClose","deviceSelectProps","Button","variant","color","onClick","MediaStreamPlayer","hasVideo","refCallback","node","refreshFrameHeight","videoProps","hidden","userDefinedVideoAttrs","style","controls","controlsList","crossOrigin","loop","mediaGroup","playsInline","preload","poster","disablePictureInPicture","disableRemotePlayback","onCanPlay","audioProps","userDefinedAudioAttrs","Placeholder","elevation","loading","CircularProgress","compileMediaConstraints","src","constraints","initialState","webRtcState","sdpOffer","signallingTimedOut","connectReducer","onComponentValueChange","nextState","offer","reducer","nextPlaying","playingChanged","nextSdpOffer","prevSdpOffer","console","log","playing","toJSON","isWebRtcMode","val","setupOffer","pc","createOffer","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","setComponentValue","componentValue","TranslatedButton","translationKey","defaultText","WebRtcStreamerInner","constraintsFromPython","setDevices","signallingTimerRef","pcRef","dispatch","getTransceivers","transceiver","getSenders","sender","close","stopInner","finally","stopRef","config","rtcConfiguration","RTCPeerConnection","evt","streams","mediaStreamConstraints","getTracks","addTrack","addTransceiver","iceConnectionState","startInner","sdpAnswerJson","remoteDescription","sdpAnswer","setRemoteDescription","desiredPlayingState","useWebRtc","buttonDisabled","receivable","isReceivable","transmittable","isTransmittable","videoEnabled","audioEnabled","handleDeviceSelect","deviceSelectOpen","setDeviceSelectOpen","openDeviceSelect","closeDeviceSelect","py","videoHtmlAttrs","audioHtmlAttrs","WebRtcStreamer","renderData","rtc_configuration","media_stream_constraints","video_html_attrs","audio_html_attrs","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.497c90cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@mui/material/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const { theme: stTheme } = useRenderData();\n\n  const stThemeJson = JSON.stringify(stTheme);\n  const muiTheme = React.useMemo(() => {\n    const stTheme: Theme = JSON.parse(stThemeJson);\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stThemeJson]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import React, { useMemo, useContext } from \"react\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport { Translations } from \"./types\";\n\nconst translationContext = React.createContext<Translations | undefined>(\n  undefined\n);\n\nexport const useTranslation = (key: keyof Translations) => {\n  const contextValue = useContext(translationContext);\n  if (contextValue == null) {\n    return null;\n  }\n\n  return contextValue[key];\n};\n\ninterface TranslationProviderProps {\n  children: React.ReactNode;\n}\nconst TranslationProvider: React.VFC<TranslationProviderProps> = (props) => {\n  const renderData = useRenderData();\n  const {\n    start,\n    stop,\n    select_device,\n    device_ask_permission,\n    device_not_available,\n    device_access_denied,\n    media_api_not_available,\n  } = renderData.args[\"translations\"] || {};\n  const value: Translations = useMemo(\n    () => ({\n      start,\n      stop,\n      select_device,\n      device_ask_permission,\n      device_not_available,\n      device_access_denied,\n      media_api_not_available,\n    }),\n    [\n      start,\n      stop,\n      select_device,\n      device_ask_permission,\n      device_not_available,\n      device_access_denied,\n      media_api_not_available,\n    ]\n  );\n  return (\n    <translationContext.Provider value={value}>\n      {props.children}\n    </translationContext.Provider>\n  );\n};\n\nexport default React.memo(TranslationProvider);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\ninterface DeviceSelectContainerProps {\n  children: React.ReactNode;\n}\nconst DeviceSelectContainer: React.VFC<DeviceSelectContainerProps> = (\n  props\n) => {\n  const theme = useTheme();\n  const isSmallViewport = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  }, [isSmallViewport]);\n\n  return (\n    <Stack direction={isSmallViewport ? \"column\" : \"row\"} spacing={2}>\n      {props.children}\n    </Stack>\n  );\n};\n\nexport default DeviceSelectContainer;\n","import Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledBox = styled(Box)(({ theme }) => ({\n  position: \"relative\",\n  [theme.breakpoints.down(\"sm\")]: {\n    width: \"100%\",\n  },\n  width: theme.spacing(24),\n  height: theme.spacing(16),\n  maxHeight: theme.spacing(16),\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}));\n\nconst VideoPreviewContainer = StyledBox;\n\nexport default VideoPreviewContainer;\n","import Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n  padding: theme.spacing(2),\n  boxSizing: \"border-box\",\n}));\n\nconst Message = StyledPaper;\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport { useTranslation } from \"../../../translation/TranslationProvider\";\n\nconst MediaApiNotAvailableMessage: React.VFC = () => {\n  return (\n    <Message>\n      {useTranslation(\"media_api_not_available\") || \"Media API not available\"}\n    </Message>\n  );\n};\n\nexport default MediaApiNotAvailableMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport { useTranslation } from \"../../../translation/TranslationProvider\";\n\nconst AskPermissionMessage: React.VFC = () => {\n  return (\n    <Message>\n      {useTranslation(\"device_ask_permission\") ||\n        \"Please allow the app to use your media devices\"}\n    </Message>\n  );\n};\n\nexport default AskPermissionMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport { useTranslation } from \"../../../translation/TranslationProvider\";\n\ninterface AccessDeniedMessageProps {\n  error: Error;\n}\nconst AccessDeniedMessage: React.VFC<AccessDeniedMessageProps> = (props) => {\n  return (\n    <Message>\n      {useTranslation(\"device_access_denied\") || \"Access denied\"} (\n      {props.error.message})\n    </Message>\n  );\n};\n\nexport default AccessDeniedMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport { useTranslation } from \"../../../translation/TranslationProvider\";\n\ninterface DeviceNotAvailableMessageProps {\n  error: Error;\n}\nconst DeviceNotAvailableMessage: React.VFC<DeviceNotAvailableMessageProps> = (\n  props\n) => {\n  return (\n    <Message>\n      {useTranslation(\"device_not_available\") || \"Device not available\"} (\n      {props.error.message})\n    </Message>\n  );\n};\n\nexport default DeviceNotAvailableMessage;\n","import React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport VideocamOffIcon from \"@mui/icons-material/VideocamOff\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledPaper = styled(Paper)({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n});\n\nconst VoidVideoPreview: React.VFC = () => {\n  return (\n    <StyledPaper>\n      <VideocamOffIcon fontSize=\"large\" />\n    </StyledPaper>\n  );\n};\n\nexport default React.memo(VoidVideoPreview);\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\n\ninterface OverlayBoxProps {\n  $transparent: boolean;\n}\nconst OverlayBox = styled(Box)<OverlayBoxProps>(({ theme, ...props }) => ({\n  margin: 0,\n  padding: 0,\n  position: \"relative\",\n  \"&:before\": {\n    position: \"absolute\",\n    content: '\"\"',\n    width: \"100%\",\n    height: \"100%\",\n    opacity: props.$transparent ? 0 : 1,\n    backgroundColor: theme.palette.background.default,\n    transition: \"opacity 0.3s\",\n  },\n}));\n\ninterface DeferProps {\n  time: number;\n  children: React.ReactElement;\n}\nconst Defer: React.VFC<DeferProps> = (props) => {\n  const [elapsed, setElapsed] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setElapsed(true);\n    }, props.time);\n\n    return () => clearTimeout(timer);\n  }, [props.time]);\n\n  return <OverlayBox $transparent={elapsed}>{props.children}</OverlayBox>;\n};\n\nexport default Defer;\n","import { styled } from \"@mui/material/styles\";\n\nconst StyledVideo = styled(\"video\")({\n  maxWidth: \"100%\",\n  maxHeight: \"100%\",\n});\n\nconst VideoPreview = StyledVideo;\n\nexport default VideoPreview;\n","export function stopAllTracks(stream: MediaStream) {\n  stream.getVideoTracks().forEach((track) => track.stop());\n  stream.getAudioTracks().forEach((track) => track.stop());\n}\n","import React, { useEffect, useRef } from \"react\";\nimport VideoPreviewComponent from \"./components/VideoPreview\";\nimport { stopAllTracks } from \"./utils\";\n\nexport interface VideoPreviewProps {\n  deviceId: MediaDeviceInfo[\"deviceId\"];\n}\nconst VideoPreview: React.VFC<VideoPreviewProps> = (props) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (props.deviceId == null) {\n      return;\n    }\n\n    let stream: MediaStream | null = null;\n    let unmounted = false;\n    navigator.mediaDevices\n      .getUserMedia({ video: { deviceId: props.deviceId }, audio: false })\n      .then((_stream) => {\n        stream = _stream;\n\n        if (unmounted) {\n          stopAllTracks(stream);\n          return;\n        }\n\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      });\n\n    return () => {\n      unmounted = true;\n      if (stream) {\n        stopAllTracks(stream);\n      }\n    };\n  }, [props.deviceId]);\n\n  return <VideoPreviewComponent ref={videoRef} autoPlay muted />;\n};\n\nexport default React.memo(VideoPreview);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, {\n  useReducer,\n  Reducer,\n  useCallback,\n  useState,\n  useEffect,\n  useRef,\n} from \"react\";\nimport NativeSelect, { NativeSelectProps } from \"@mui/material/NativeSelect\";\nimport Alert from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport DeviceSelectContainer from \"./components/DeviceSelectContainer\";\nimport VideoPreviewContainer from \"./components/VideoPreviewContainer\";\nimport Message from \"./components/messages/Message\";\nimport MediaApiNotAvailableMessage from \"./components/messages/MediaApiNotAvailableMessage\";\nimport AskPermissionMessage from \"./components/messages/AskPermissionMessage\";\nimport AccessDeniedMessage from \"./components/messages/AccessDeniedMessage\";\nimport DeviceNotAvailableMessage from \"./components/messages/DeviceNotAvailableMessage\";\nimport VoidVideoPreview from \"./components/VoidVideoPreview\";\nimport Defer from \"./components/Defer\";\nimport VideoPreview from \"./VideoPreview\";\nimport { stopAllTracks } from \"./utils\";\n\nfunction ensureValidSelection(\n  devices: MediaDeviceInfo[],\n  selectedDeviceId: MediaDeviceInfo[\"deviceId\"] | null\n): MediaDeviceInfo[\"deviceId\"] | null {\n  const deviceIds = devices.map((d) => d.deviceId);\n  if (selectedDeviceId && deviceIds.includes(selectedDeviceId)) {\n    return selectedDeviceId;\n  }\n  if (deviceIds.length > 0) {\n    return deviceIds[0];\n  }\n  return null;\n}\n\ninterface DeviceSelectionState {\n  unavailable: boolean;\n  videoInputs: MediaDeviceInfo[];\n  audioInputs: MediaDeviceInfo[];\n  audioOutputs: MediaDeviceInfo[];\n  // TODO: Add selectedAudioOutputDeviceId\n  selectedVideoInputDeviceId: MediaDeviceInfo[\"deviceId\"] | null;\n  selectedAudioInputDeviceId: MediaDeviceInfo[\"deviceId\"] | null;\n}\ninterface DeviceSelectionActionBase {\n  type: string;\n}\ninterface DeviceSelectionSetUnavailableAction\n  extends DeviceSelectionActionBase {\n  type: \"SET_UNAVAILABLE\";\n}\ninterface DeviceSelectionUpdateDevicesAction extends DeviceSelectionActionBase {\n  type: \"UPDATE_DEVICES\";\n  devices: MediaDeviceInfo[];\n}\ninterface DeviceSelectionUpdateSelectedDeviceIdAction\n  extends DeviceSelectionActionBase {\n  type: \"UPDATE_SELECTED_DEVICE_ID\";\n  payload: {\n    selectedVideoInputDeviceId?: MediaDeviceInfo[\"deviceId\"] | null;\n    selectedAudioInputDeviceId?: MediaDeviceInfo[\"deviceId\"] | null;\n  };\n}\ntype DeviceSelectionAction =\n  | DeviceSelectionSetUnavailableAction\n  | DeviceSelectionUpdateDevicesAction\n  | DeviceSelectionUpdateSelectedDeviceIdAction;\nconst deviceSelectionReducer: Reducer<\n  DeviceSelectionState,\n  DeviceSelectionAction\n> = (state, action) => {\n  switch (action.type) {\n    case \"SET_UNAVAILABLE\": {\n      return {\n        unavailable: true,\n        videoInputs: [],\n        audioInputs: [],\n        audioOutputs: [],\n        selectedVideoInputDeviceId: null,\n        selectedAudioInputDeviceId: null,\n      };\n    }\n    case \"UPDATE_DEVICES\": {\n      const devices = action.devices;\n      const videoInputs = devices.filter((d) => d.kind === \"videoinput\");\n      const audioInputs = devices.filter((d) => d.kind === \"audioinput\");\n      const audioOutputs = devices.filter((d) => d.kind === \"audiooutput\");\n\n      const selectedVideoInputDeviceId = ensureValidSelection(\n        videoInputs,\n        state.selectedVideoInputDeviceId\n      );\n      const selectedAudioInputDeviceId = ensureValidSelection(\n        audioInputs,\n        state.selectedAudioInputDeviceId\n      );\n\n      return {\n        ...state,\n        videoInputs,\n        audioInputs,\n        audioOutputs,\n        selectedVideoInputDeviceId,\n        selectedAudioInputDeviceId,\n      };\n    }\n    case \"UPDATE_SELECTED_DEVICE_ID\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n  }\n};\n\ntype PermissionState = \"WAITING\" | \"ALLOWED\" | Error;\n\nexport interface DeviceSelectProps {\n  video: boolean;\n  audio: boolean;\n  defaultVideoDeviceId: MediaDeviceInfo[\"deviceId\"] | null;\n  defaultAudioDeviceId: MediaDeviceInfo[\"deviceId\"] | null;\n  onSelect: (devices: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  }) => void;\n}\nconst DeviceSelect: React.VFC<DeviceSelectProps> = (props) => {\n  const {\n    video: useVideo,\n    audio: useAudio,\n    defaultVideoDeviceId,\n    defaultAudioDeviceId,\n    onSelect,\n  } = props;\n\n  const [permissionState, setPermissionState] =\n    useState<PermissionState>(\"WAITING\");\n\n  const [\n    {\n      unavailable,\n      videoInputs,\n      selectedVideoInputDeviceId,\n      audioInputs,\n      selectedAudioInputDeviceId,\n    },\n    deviceSelectionDispatch,\n  ] = useReducer(deviceSelectionReducer, {\n    unavailable: false,\n    videoInputs: [],\n    audioInputs: [],\n    audioOutputs: [],\n    selectedVideoInputDeviceId: defaultVideoDeviceId,\n    selectedAudioInputDeviceId: defaultAudioDeviceId,\n  });\n\n  // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/ondevicechange#example\n  const updateDeviceList = useCallback(() => {\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      deviceSelectionDispatch({ type: \"SET_UNAVAILABLE\" });\n      return;\n    }\n\n    return navigator.mediaDevices.enumerateDevices().then((devices) => {\n      deviceSelectionDispatch({\n        type: \"UPDATE_DEVICES\",\n        devices,\n      });\n    });\n  }, []);\n\n  // These values are passed to inside the useEffect below via a ref\n  // because they are used there only for UX improvement\n  // and should not be added to the dependency list to avoid triggering re-execution.\n  const defaultDeviceIdsRef = useRef({\n    video: defaultVideoDeviceId,\n    audio: defaultAudioDeviceId,\n  });\n  defaultDeviceIdsRef.current = {\n    video: defaultVideoDeviceId,\n    audio: defaultAudioDeviceId,\n  };\n  // Call `getUserMedia()` to ask the user for the permission.\n  useEffect(() => {\n    if (typeof navigator?.mediaDevices?.getUserMedia !== \"function\") {\n      deviceSelectionDispatch({ type: \"SET_UNAVAILABLE\" });\n      return;\n    }\n\n    setPermissionState(\"WAITING\");\n\n    const { video: videoDeviceId, audio: audioDeviceId } =\n      defaultDeviceIdsRef.current;\n    navigator.mediaDevices\n      .getUserMedia({\n        // Specify the target devices if the user already selected specific ones.\n        // This is not mandatory but beneficial for better UX\n        // as unused devices are not accessed so that their LED indicators\n        // will not be unnecessarily turned on.\n        video:\n          useVideo && videoDeviceId ? { deviceId: videoDeviceId } : useVideo,\n        audio:\n          useAudio && audioDeviceId ? { deviceId: audioDeviceId } : useAudio,\n      })\n      .then(async (stream) => {\n        stopAllTracks(stream);\n\n        await updateDeviceList();\n\n        setPermissionState(\"ALLOWED\");\n      })\n      .catch((err) => {\n        setPermissionState(err);\n      });\n  }, [useVideo, useAudio, updateDeviceList]);\n\n  // Set up the ondevicechange event handler\n  useEffect(() => {\n    const handleDeviceChange = () => updateDeviceList();\n    navigator.mediaDevices.ondevicechange = handleDeviceChange;\n\n    return () => {\n      if (navigator.mediaDevices.ondevicechange === handleDeviceChange) {\n        navigator.mediaDevices.ondevicechange = null;\n      }\n    };\n  }, [updateDeviceList]);\n\n  const handleVideoInputChange = useCallback<\n    NonNullable<NativeSelectProps[\"onChange\"]>\n  >((e) => {\n    deviceSelectionDispatch({\n      type: \"UPDATE_SELECTED_DEVICE_ID\",\n      payload: {\n        selectedVideoInputDeviceId: e.target.value,\n      },\n    });\n  }, []);\n\n  const handleAudioInputChange = useCallback<\n    NonNullable<NativeSelectProps[\"onChange\"]>\n  >((e) => {\n    deviceSelectionDispatch({\n      type: \"UPDATE_SELECTED_DEVICE_ID\",\n      payload: {\n        selectedAudioInputDeviceId: e.target.value,\n      },\n    });\n  }, []);\n\n  // Call onSelect\n  useEffect(() => {\n    const videoInput = useVideo\n      ? videoInputs.find((d) => d.deviceId === selectedVideoInputDeviceId)\n      : null;\n    const audioInput = useAudio\n      ? audioInputs.find((d) => d.deviceId === selectedAudioInputDeviceId)\n      : null;\n    onSelect({ video: videoInput || null, audio: audioInput || null });\n  }, [\n    useVideo,\n    useAudio,\n    onSelect,\n    videoInputs,\n    audioInputs,\n    selectedVideoInputDeviceId,\n    selectedAudioInputDeviceId,\n  ]);\n\n  useEffect(() => {\n    setTimeout(() => Streamlit.setFrameHeight());\n  });\n\n  if (unavailable) {\n    return <MediaApiNotAvailableMessage />;\n  }\n\n  if (permissionState === \"WAITING\") {\n    return (\n      <Defer time={1000}>\n        <AskPermissionMessage />\n      </Defer>\n    );\n  }\n\n  if (permissionState instanceof Error) {\n    const error = permissionState;\n    if (\n      error instanceof DOMException &&\n      (error.name === \"NotReadableError\" || error.name === \"NotFoundError\")\n    ) {\n      return <DeviceNotAvailableMessage error={error} />;\n    } else if (\n      error instanceof DOMException &&\n      error.name === \"NotAllowedError\"\n    ) {\n      return <AccessDeniedMessage error={error} />;\n    } else {\n      return (\n        <Message>\n          <Alert severity=\"error\">\n            {error.name}: {error.message}\n          </Alert>\n        </Message>\n      );\n    }\n  }\n\n  return (\n    <DeviceSelectContainer>\n      <VideoPreviewContainer>\n        {useVideo && selectedVideoInputDeviceId ? (\n          <VideoPreview deviceId={selectedVideoInputDeviceId} />\n        ) : (\n          <VoidVideoPreview />\n        )}\n      </VideoPreviewContainer>\n      <Stack spacing={2} justifyContent=\"center\">\n        {useVideo && selectedVideoInputDeviceId && (\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"device-select-video-input\">\n              Video Input\n            </InputLabel>\n            <NativeSelect\n              inputProps={{\n                name: \"video-input\",\n                id: \"device-select-video-input\",\n              }}\n              value={selectedVideoInputDeviceId}\n              onChange={handleVideoInputChange}\n            >\n              {videoInputs.map((device) => (\n                <option key={device.deviceId} value={device.deviceId}>\n                  {device.label}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n        )}\n        {useAudio && selectedAudioInputDeviceId && (\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"device-select-audio-input\">\n              Audio Input\n            </InputLabel>\n            <NativeSelect\n              inputProps={{\n                name: \"audio-input\",\n                id: \"device-select-audio-input\",\n              }}\n              value={selectedAudioInputDeviceId}\n              onChange={handleAudioInputChange}\n            >\n              {audioInputs.map((device) => (\n                <option key={device.deviceId} value={device.deviceId}>\n                  {device.label}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n        )}\n      </Stack>\n    </DeviceSelectContainer>\n  );\n};\n\nexport default DeviceSelect;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport DeviceSelect, { DeviceSelectProps } from \"./DeviceSelect\";\n\nexport interface DeviceSelectFormProps extends DeviceSelectProps {\n  onClose: () => void;\n}\nconst DeviceSelectForm: React.VFC<DeviceSelectFormProps> = ({\n  onClose,\n  ...deviceSelectProps\n}) => {\n  return (\n    <Stack spacing={2}>\n      <DeviceSelect {...deviceSelectProps} />\n      <Box>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\n          Done\n        </Button>\n      </Box>\n    </Stack>\n  );\n};\n\nexport default DeviceSelectForm;\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, {\n  useEffect,\n  useCallback,\n  VideoHTMLAttributes,\n  AudioHTMLAttributes,\n  HTMLAttributes,\n} from \"react\";\n\ntype UserDefinedHTMLVideoAttributes = Partial<\n  Omit<\n    VideoHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\ntype UserDefinedHTMLAudioAttributes = Partial<\n  Omit<\n    AudioHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n  userDefinedVideoAttrs: UserDefinedHTMLVideoAttributes | undefined;\n  userDefinedAudioAttrs: UserDefinedHTMLAudioAttributes | undefined;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  if (hasVideo) {\n    // NOTE: Enumerate all allowed props instead of simply using spread operator\n    //       passing all the fields in props.userDefinedVideoAttrs\n    //       in order to block unexpected fields especially like dangerouslySetInnerHTML.\n    const videoProps: VideoHTMLAttributes<HTMLVideoElement> = {\n      hidden: props.userDefinedVideoAttrs?.hidden,\n      style: props.userDefinedVideoAttrs?.style,\n      autoPlay: props.userDefinedVideoAttrs?.autoPlay,\n      controls: props.userDefinedVideoAttrs?.controls,\n      controlsList: props.userDefinedVideoAttrs?.controlsList,\n      crossOrigin: props.userDefinedVideoAttrs?.crossOrigin,\n      loop: props.userDefinedVideoAttrs?.loop,\n      mediaGroup: props.userDefinedVideoAttrs?.mediaGroup,\n      muted: props.userDefinedVideoAttrs?.muted,\n      playsInline: props.userDefinedVideoAttrs?.playsInline,\n      preload: props.userDefinedVideoAttrs?.preload,\n      height: props.userDefinedVideoAttrs?.height,\n      poster: props.userDefinedVideoAttrs?.poster,\n      width: props.userDefinedVideoAttrs?.width,\n      disablePictureInPicture:\n        props.userDefinedVideoAttrs?.disablePictureInPicture,\n      disableRemotePlayback: props.userDefinedVideoAttrs?.disableRemotePlayback,\n    };\n\n    return (\n      <video {...videoProps} ref={refCallback} onCanPlay={refreshFrameHeight} />\n    );\n  } else {\n    const audioProps: AudioHTMLAttributes<HTMLAudioElement> = {\n      hidden: props.userDefinedAudioAttrs?.hidden,\n      style: props.userDefinedAudioAttrs?.style,\n      autoPlay: props.userDefinedAudioAttrs?.autoPlay,\n      controls: props.userDefinedAudioAttrs?.controls,\n      controlsList: props.userDefinedAudioAttrs?.controlsList,\n      crossOrigin: props.userDefinedAudioAttrs?.crossOrigin,\n      loop: props.userDefinedAudioAttrs?.loop,\n      mediaGroup: props.userDefinedAudioAttrs?.mediaGroup,\n      muted: props.userDefinedAudioAttrs?.muted,\n      playsInline: props.userDefinedAudioAttrs?.playsInline,\n      preload: props.userDefinedAudioAttrs?.preload,\n    };\n    return <audio ref={refCallback} {...audioProps} />;\n  }\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport VideoLabelIcon from \"@mui/icons-material/VideoLabel\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(4),\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  return (\n    <StyledPaper elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </StyledPaper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","export function compileMediaConstraints(\n  src: MediaStreamConstraints | undefined,\n  videoDeviceId: string | undefined,\n  audioDeviceId: string | undefined\n): MediaStreamConstraints {\n  const constraints = src || {};\n\n  if (videoDeviceId) {\n    if (constraints.video === true) {\n      constraints.video = {\n        deviceId: videoDeviceId,\n      };\n    } else if (\n      typeof constraints.video === \"object\" ||\n      constraints.video == null\n    ) {\n      constraints.video = {\n        ...constraints.video,\n        deviceId: videoDeviceId,\n      };\n    }\n  }\n\n  if (audioDeviceId) {\n    if (constraints.audio === true) {\n      constraints.audio = {\n        deviceId: audioDeviceId,\n      };\n    } else if (\n      typeof constraints.audio === \"object\" ||\n      constraints.audio == null\n    ) {\n      constraints.audio = {\n        ...constraints.audio,\n        deviceId: audioDeviceId,\n      };\n    }\n  }\n\n  return constraints;\n}\n\ninterface MediaUsage {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\nexport function getMediaUsage(constraintsFromPython: any): MediaUsage {\n  const videoEnabled = constraintsFromPython\n    ? !!constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? !!constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n}\n","import { ComponentValue } from \"../component-value\";\nimport { Action } from \"./actions\";\n\nexport type WebRtcState = \"STOPPED\" | \"SIGNALLING\" | \"PLAYING\" | \"STOPPING\";\nexport interface State {\n  webRtcState: WebRtcState;\n  sdpOffer: RTCSessionDescription | null;\n  signallingTimedOut: boolean;\n  stream: MediaStream | null;\n  error: Error | null;\n}\nexport const initialState: State = {\n  webRtcState: \"STOPPED\",\n  sdpOffer: null,\n  signallingTimedOut: false,\n  stream: null,\n  error: null,\n};\n\nexport const reducer: React.Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case \"SIGNALLING_START\":\n      return {\n        ...state,\n        webRtcState: \"SIGNALLING\",\n        stream: null,\n        error: null,\n        signallingTimedOut: false,\n      };\n    case \"SIGNALLING_TIMEOUT\":\n      return {\n        ...state,\n        signallingTimedOut: true,\n      };\n    case \"SET_STREAM\":\n      return {\n        ...state,\n        stream: action.stream,\n      };\n    case \"SET_OFFER\":\n      return {\n        ...state,\n        sdpOffer: action.offer,\n      };\n    case \"STOPPING\":\n      return {\n        ...state,\n        webRtcState: \"STOPPING\",\n        sdpOffer: null,\n      };\n    case \"STOPPED\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        stream: null,\n      };\n    case \"START_PLAYING\":\n      return {\n        ...state,\n        webRtcState: \"PLAYING\",\n        sdpOffer: null,\n      };\n    case \"PROCESS_ANSWER_ERROR\":\n      return {\n        ...state,\n        error: action.error,\n      };\n    case \"ERROR\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        error: action.error,\n      };\n  }\n};\n\nexport const connectReducer = (\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n): React.Reducer<State, Action> => {\n  const connectedReducer: React.Reducer<State, Action> = (state, action) => {\n    const nextState = reducer(state, action);\n\n    const nextPlaying = nextState.webRtcState === \"PLAYING\";\n    const prevPlaying = state.webRtcState === \"PLAYING\";\n    const playingChanged = nextPlaying !== prevPlaying;\n\n    const nextSdpOffer = nextState.sdpOffer;\n    const prevSdpOffer = state.sdpOffer;\n    const sdpOfferChanged = nextSdpOffer !== prevSdpOffer;\n\n    if (playingChanged || sdpOfferChanged) {\n      if (prevSdpOffer) {\n        console.log(\"Send SDP offer\", prevSdpOffer);\n      }\n      onComponentValueChange({\n        playing: nextPlaying,\n        sdpOffer: nextSdpOffer ? nextSdpOffer.toJSON() : \"\", // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so here an empty string is set instead when `sdpOffer` is undefined. // TODO: Create an issue\n      });\n    }\n\n    return nextState;\n  };\n\n  return connectedReducer;\n};\n","import { useReducer, useCallback, useRef, useEffect, useMemo } from \"react\";\nimport { compileMediaConstraints } from \"../media-constraint\";\nimport { ComponentValue } from \"../component-value\";\nimport { connectReducer, initialState } from \"./reducer\";\n\nexport type WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nexport const isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nexport const isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nexport const isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\nconst SIGNALLING_TIMEOUT = 3 * 1000;\n\nexport const useWebRtc = (\n  props: {\n    mode: WebRtcMode;\n    desiredPlayingState: boolean | undefined;\n    sdpAnswerJson: string | undefined;\n    rtcConfiguration: RTCConfiguration | undefined;\n    mediaStreamConstraints: MediaStreamConstraints | undefined;\n  },\n  videoInput: MediaDeviceInfo | null,\n  audioInput: MediaDeviceInfo | null,\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n) => {\n  // Initialize component value\n  useEffect(() => {\n    return onComponentValueChange({\n      playing: false,\n      sdpOffer: \"\",\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const signallingTimerRef = useRef<NodeJS.Timeout>();\n  const pcRef = useRef<RTCPeerConnection>();\n  const reducer = useMemo(\n    () => connectReducer(onComponentValueChange),\n    [onComponentValueChange]\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const stop = useCallback(() => {\n    const stopInner = async () => {\n      if (state.webRtcState === \"STOPPING\") {\n        return;\n      }\n\n      const pc = pcRef.current;\n      pcRef.current = undefined;\n\n      dispatch({ type: \"STOPPING\" });\n\n      if (pc == null) {\n        return;\n      }\n\n      // close transceivers\n      if (pc.getTransceivers) {\n        pc.getTransceivers().forEach(function (transceiver) {\n          if (transceiver.stop) {\n            transceiver.stop();\n          }\n        });\n      }\n\n      // close local audio / video\n      pc.getSenders().forEach(function (sender) {\n        sender.track?.stop();\n      });\n\n      // close peer connection\n      return new Promise<void>((resolve) => {\n        setTimeout(() => {\n          pc.close();\n          resolve();\n        }, 500);\n      });\n    };\n\n    stopInner()\n      .catch((error) => dispatch({ type: \"ERROR\", error }))\n      .finally(() => {\n        dispatch({ type: \"STOPPED\" });\n      });\n  }, [state.webRtcState]);\n\n  const stopRef = useRef(stop);\n  stopRef.current = stop;\n\n  const start = useCallback(() => {\n    if (state.webRtcState !== \"STOPPED\") {\n      return;\n    }\n\n    const startInner = async () => {\n      dispatch({ type: \"SIGNALLING_START\" });\n      signallingTimerRef.current = setTimeout(() => {\n        dispatch({ type: \"SIGNALLING_TIMEOUT\" });\n      }, SIGNALLING_TIMEOUT);\n\n      const mode = props.mode;\n\n      const config: RTCConfiguration = props.rtcConfiguration || {};\n      console.log(\"RTCConfiguration:\", config);\n      const pc = new RTCPeerConnection(config);\n\n      // Connect received audio / video to DOM elements\n      if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n        pc.addEventListener(\"track\", (evt) => {\n          const stream = evt.streams[0]; // TODO: Handle multiple streams\n          dispatch({ type: \"SET_STREAM\", stream });\n        });\n      }\n\n      // Set up transceivers\n      if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n        const constraints = compileMediaConstraints(\n          props.mediaStreamConstraints,\n          videoInput?.deviceId,\n          audioInput?.deviceId\n        );\n        console.log(\"MediaStreamConstraints:\", constraints);\n\n        if (constraints.audio || constraints.video) {\n          if (navigator.mediaDevices == null) {\n            // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n            // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n            throw new Error(\n              \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n            );\n          }\n          if (navigator.mediaDevices.getUserMedia == null) {\n            throw new Error(\"getUserMedia is not implemented in this browser\");\n          }\n\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          stream.getTracks().forEach((track) => {\n            pc.addTrack(track, stream);\n          });\n        }\n\n        if (mode === \"SENDONLY\") {\n          for (const transceiver of pc.getTransceivers()) {\n            transceiver.direction = \"sendonly\";\n          }\n        }\n      } else if (mode === \"RECVONLY\") {\n        pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n        pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n      }\n      console.log(\"transceivers\", pc.getTransceivers());\n\n      pc.addEventListener(\"iceconnectionstatechange\", () => {\n        console.log(\"iceconnectionstatechange\", pc.iceConnectionState);\n        if (\n          pc.iceConnectionState === \"disconnected\" ||\n          pc.iceConnectionState === \"failed\" ||\n          pc.iceConnectionState === \"closed\"\n        ) {\n          stopRef.current();\n        }\n      });\n\n      pcRef.current = pc;\n\n      await setupOffer(pc).then((offer) => {\n        if (offer == null) {\n          throw new Error(\"Failed to create an offer SDP\");\n        }\n\n        dispatch({ type: \"SET_OFFER\", offer });\n      });\n    };\n\n    startInner().catch((error) =>\n      dispatch({\n        type: \"ERROR\",\n        error,\n      })\n    );\n  }, [\n    audioInput?.deviceId,\n    props.mediaStreamConstraints,\n    props.mode,\n    props.rtcConfiguration,\n    state.webRtcState,\n    videoInput?.deviceId,\n  ]);\n\n  // processAnswer\n  useEffect(() => {\n    const pc = pcRef.current;\n    if (pc == null) {\n      return;\n    }\n\n    const sdpAnswerJson = props.sdpAnswerJson;\n    if (pc.remoteDescription == null) {\n      if (sdpAnswerJson && state.webRtcState === \"SIGNALLING\") {\n        const sdpAnswer = JSON.parse(sdpAnswerJson);\n        console.log(\"Receive answer sdpOffer\", sdpAnswer);\n        pc.setRemoteDescription(sdpAnswer)\n          .then(() => {\n            console.log(\"Remote description is set\");\n\n            if (signallingTimerRef.current) {\n              clearTimeout(signallingTimerRef.current);\n            }\n            dispatch({ type: \"START_PLAYING\" });\n          })\n          .catch((error) => {\n            dispatch({ type: \"PROCESS_ANSWER_ERROR\", error });\n            stop();\n          });\n      }\n    }\n  }, [props.sdpAnswerJson, state.webRtcState, stop]);\n\n  // reconcilePlayingState\n  useEffect(() => {\n    const desiredPlayingState = props.desiredPlayingState;\n    if (desiredPlayingState != null) {\n      if (desiredPlayingState === true && state.webRtcState === \"STOPPED\") {\n        start();\n      } else if (\n        desiredPlayingState === false &&\n        (state.webRtcState === \"SIGNALLING\" || state.webRtcState === \"PLAYING\")\n      ) {\n        stop();\n      }\n    }\n  }, [props.desiredPlayingState, start, state.webRtcState, stop]);\n\n  return {\n    start,\n    stop,\n    state,\n  };\n};\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  playing: boolean;\n  sdpOffer: string; // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so an empty string will be used here for that purpose. // TODO: Create an issue\n}\n\nexport function setComponentValue(componentValue: ComponentValue) {\n  return Streamlit.setComponentValue(componentValue);\n}\n","import React from \"react\";\nimport Button, { ButtonProps } from \"@mui/material/Button\";\nimport { useTranslation } from \"../TranslationProvider\";\nimport { TranslationKey } from \"../types\";\n\ninterface TranslatedButtonProps extends ButtonProps {\n  translationKey: TranslationKey;\n  defaultText: string;\n}\nconst TranslatedButton: React.VFC<TranslatedButtonProps> = ({\n  translationKey,\n  defaultText,\n  ...props\n}) => {\n  return (\n    <Button {...props}>{useTranslation(translationKey) || defaultText}</Button>\n  );\n};\n\nexport default TranslatedButton;\n","import React, { useState, useCallback } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Alert from \"@mui/material/Alert\";\nimport DeviceSelectForm, {\n  DeviceSelectFormProps,\n} from \"./DeviceSelect/DeviceSelectForm\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport {\n  useWebRtc,\n  WebRtcMode,\n  isWebRtcMode,\n  isReceivable,\n  isTransmittable,\n} from \"./webrtc\";\nimport { getMediaUsage } from \"./media-constraint\";\nimport { ComponentValue, setComponentValue } from \"./component-value\";\nimport TranslatedButton from \"./translation/components/TranslatedButton\";\nimport \"webrtc-adapter\";\n\ninterface WebRtcStreamerInnerProps {\n  disabled: boolean;\n  mode: WebRtcMode;\n  desiredPlayingState: boolean | undefined;\n  sdpAnswerJson: string | undefined;\n  rtcConfiguration: RTCConfiguration | undefined;\n  mediaStreamConstraints: MediaStreamConstraints | undefined;\n  videoHtmlAttrs: any;\n  audioHtmlAttrs: any;\n  onComponentValueChange: (newComponentValue: ComponentValue) => void;\n}\nconst WebRtcStreamerInner: React.VFC<WebRtcStreamerInnerProps> = (props) => {\n  const [devices, setDevices] = useState<{\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  }>({ video: null, audio: null });\n  const { state, start, stop } = useWebRtc(\n    props,\n    devices.video,\n    devices.audio,\n    props.onComponentValueChange\n  );\n\n  const mode = props.mode;\n  const buttonDisabled =\n    props.disabled ||\n    (state.webRtcState === \"SIGNALLING\" && !state.signallingTimedOut) || // Users can click the stop button after signalling timed out.\n    state.webRtcState === \"STOPPING\" ||\n    props.desiredPlayingState != null;\n  const receivable = isWebRtcMode(mode) && isReceivable(mode);\n  const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n  const { videoEnabled, audioEnabled } = getMediaUsage(\n    props.mediaStreamConstraints\n  );\n\n  const handleDeviceSelect = useCallback<DeviceSelectFormProps[\"onSelect\"]>(\n    ({ video, audio }) => {\n      setDevices({ video, audio });\n    },\n    []\n  );\n\n  const [deviceSelectOpen, setDeviceSelectOpen] = useState(false);\n  const openDeviceSelect = useCallback(() => {\n    setDeviceSelectOpen(true);\n  }, []);\n  const closeDeviceSelect = useCallback(() => {\n    setDeviceSelectOpen(false);\n  }, []);\n  if (deviceSelectOpen) {\n    return (\n      <DeviceSelectForm\n        video={videoEnabled}\n        audio={audioEnabled}\n        defaultVideoDeviceId={devices.video ? devices.video.deviceId : null}\n        defaultAudioDeviceId={devices.audio ? devices.audio.deviceId : null}\n        onSelect={handleDeviceSelect}\n        onClose={closeDeviceSelect}\n      />\n    );\n  }\n\n  return (\n    <Box>\n      {state.error && (\n        <Alert severity=\"error\">\n          {state.error.name}: {state.error.message}\n        </Alert>\n      )}\n      <Box py={1} display=\"flex\">\n        {state.stream ? (\n          <MediaStreamPlayer\n            stream={state.stream}\n            userDefinedVideoAttrs={props.videoHtmlAttrs}\n            userDefinedAudioAttrs={props.audioHtmlAttrs}\n          />\n        ) : (\n          receivable && (\n            <Placeholder loading={state.webRtcState === \"SIGNALLING\"} />\n          )\n        )}\n      </Box>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        {state.webRtcState === \"PLAYING\" ||\n        state.webRtcState === \"SIGNALLING\" ? (\n          <TranslatedButton\n            variant=\"contained\"\n            onClick={stop}\n            disabled={buttonDisabled}\n            translationKey=\"stop\"\n            defaultText=\"Stop\"\n          />\n        ) : (\n          <TranslatedButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={start}\n            disabled={buttonDisabled}\n            translationKey=\"start\"\n            defaultText=\"Start\"\n          />\n        )}\n        {transmittable && state.webRtcState === \"STOPPED\" && (\n          <TranslatedButton\n            color=\"inherit\"\n            onClick={openDeviceSelect}\n            translationKey=\"select_device\"\n            defaultText=\"Select Device\"\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst WebRtcStreamer: React.VFC = () => {\n  const renderData = useRenderData();\n\n  const mode = renderData.args[\"mode\"];\n  const desiredPlayingState = renderData.args[\"desired_playing_state\"];\n  const sdpAnswerJson = renderData.args[\"sdp_answer_json\"];\n  const rtcConfiguration: RTCConfiguration = renderData.args.rtc_configuration;\n  const mediaStreamConstraints: MediaStreamConstraints =\n    renderData.args.media_stream_constraints;\n  const videoHtmlAttrs = renderData.args.video_html_attrs;\n  const audioHtmlAttrs = renderData.args.audio_html_attrs;\n\n  if (!isWebRtcMode(mode)) {\n    throw new Error(`Invalid mode ${mode}`);\n  }\n\n  return (\n    <WebRtcStreamerInner\n      disabled={renderData.disabled}\n      mode={mode}\n      desiredPlayingState={desiredPlayingState}\n      sdpAnswerJson={sdpAnswerJson}\n      rtcConfiguration={rtcConfiguration}\n      mediaStreamConstraints={mediaStreamConstraints}\n      videoHtmlAttrs={videoHtmlAttrs}\n      audioHtmlAttrs={audioHtmlAttrs}\n      onComponentValueChange={setComponentValue}\n    />\n  );\n};\n\nexport default WebRtcStreamer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"./ThemeProvider\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\";\nimport TranslationProvider from \"./translation/TranslationProvider\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <TranslationProvider>\n        <ThemeProvider>\n          <CssBaseline />\n          <WebRtcStreamer />\n        </ThemeProvider>\n      </TranslationProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}